#! /usr/bin/env python

""" Configure script for the health care portal software.

This writes buildout.cfg.  After running configure you should run buildout to execute the build.

You can run this as:

./configure

To build a standard development portal configured as a netherlands portal

./configure --environment production

To build a production installation of the netherlands portal.
"""

import os, sys
import subprocess
from optparse import OptionParser

def get_version(path):
    p = subprocess.Popen([sys.executable, "setup.py", "-V"], stdout=subprocess.PIPE, cwd=path)
    o, e = p.communicate()
    return o.strip()

parser = OptionParser()
parser.add_option("-e", "--environment", dest="environment",
                  help="What kind of deployment", default="dev")
parser.add_option("-n", "--noindex", dest="noindex",
		  help="Do not use our index server", default=False, action="store_true")
parser.add_option("-c", "--checkout", dest="checkout",
                  help="Do not use a dist.isotoma.com egg, use this checkout", default=False, action="store_true")
options, args = parser.parse_args()

if options.environment != "dev":
    template = "[buildout]\n" \
	       "%(index)s" \
               "extends =\n" \
               "    isotoma/base.cfg\n" \
               "    isotoma/fullstack.cfg\n" \
               "    isotoma/environment/%(environment)s/environment.cfg\n" \
               "cwd = %(cwd)s\n" \
               "%(checkout)s\n" \
               "\n" \
               "[versions]\n" \
               "leetveld = %(version)s\n"

else:
    template = "[buildout]\n"  \
	       "%(index)s" \
               "extends =\n" \
               "    isotoma/base.cfg\n" \
               "cwd = %(cwd)s\n" \
               "%(checkout)s"


if options.noindex:
    index = ""
else:
    index = "index = http://dist.isotoma.com/index\n"

if not options.checkout:
    checkout = ""
else:
    checkout = "develop = ${buildout:cwd}/src\n"

version = get_version("src")

print "Configuring to install version", version

open("buildout.cfg", "w").write(template % {
    "environment":options.environment,
    "cwd": os.getcwd(),
    "index": index,
    "checkout": checkout,
    "version": version,
})
